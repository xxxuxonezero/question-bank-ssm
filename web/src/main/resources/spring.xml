<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <context:component-scan base-package="com.onezero">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!--导入外部配置文件-->
    <context:property-placeholder location="classpath:druid.properties, classpath:redis.properties"/>
<!--    &lt;!&ndash;redis连接池基本配置&ndash;&gt;-->
<!--    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
<!--        <property name="maxTotal" value="${redis.maxActive}"/>-->
<!--        <property name="maxIdle" value="${redis.maxIdle}"/>-->
<!--        <property name="maxWaitMillis" value="${redis.maxWait}"/>-->
<!--    </bean>-->
<!--    &lt;!&ndash;redis连接池配置&ndash;&gt;-->
<!--    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">-->
<!--        <property name="password" value="${redis.pass}"/>-->
<!--        <property name="hostName" value="${redis.host}"/>-->
<!--        <property name="port" value="${redis.port}"/>-->
<!--        <property name="poolConfig" ref="poolConfig"/>-->
<!--    </bean>-->
<!--    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">-->
<!--        <property name="connectionFactory" ref="jedisConnectionFactory"/>-->
<!--        &lt;!&ndash;序列化方式&ndash;&gt;-->
<!--        <property name="keySerializer">-->
<!--            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>-->
<!--        </property>-->
<!--        <property name="valueSerializer">-->
<!--            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>-->
<!--        </property>-->
<!--        <property name="hashKeySerializer">-->
<!--            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>-->
<!--        </property>-->
<!--        <property name="hashValueSerializer">-->
<!--            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>-->
<!--        </property>-->
<!--        <property name="enableTransactionSupport" value="false"/>-->
<!--    </bean>-->

    <!--配置druid数据源-->
    <bean class="com.alibaba.druid.pool.DruidDataSource" id="ds">
        <property name="url" value="${jdbc.url}"/>
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="initialSize" value="${jdbc.initialSize}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>
        <property name="maxWait" value="${jdbc.maxWait}"/>
    </bean>

    <!--配置mybatis-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--指定配置文件位置-->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
        <!--数据源-->
        <property name="dataSource" ref="ds"/>
        <property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"/>
    </bean>

    <!--把每一个dao接口的实现都添加到ioc容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.onezero.dal"/>
    </bean>
</beans>